package com.mavin;


import org.jsoup.Jsoup;
import org.jsoup.nodes.Document;

import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.time.DayOfWeek;
import java.time.LocalTime;
import java.util.Date;
import java.util.ArrayList;
import java.util.List;

public class Crawler {
    String usernameSQL = "root";
    String url = "jdbc:mysql://localhost:3306/stock";
    JDBC jdbc = new JDBC(url, usernameSQL, passwordSQL);

    private String[] tickerSymbol;


    public Crawler(String[] tickerSymbol) throws SQLException {
        this.tickerSymbol = tickerSymbol;

    }

    public String[] generateURL(String[] ticker){

        String[] tickerURL = new String[ticker.length];
        String url = "https://www.google.com/search?q=";
        for(int i = 0; i < ticker.length; i++){
            String tempURL = url + ticker[i] + " stock";
            tickerURL[i] = tempURL;
        }
        return tickerURL;

    }
    public List<List<String>> stockInformation (String [] stockURL) {

        StringBuilder sb = new StringBuilder();


        Document document;
        List<List<String>> finalReturn = new ArrayList<>();
        List<String> fullName = new ArrayList<>();
        List<String> price = new ArrayList<>();
        List<String> lowPrice = new ArrayList<>();
        List<String> highPrice = new ArrayList<>();



        String query = "div.PZPZlf.ssJ7i.B5dxMb"; //Full Name
        String query1 = "span.IsqQVc.NprOob.wT3VGc";  //Price
        String query2 = "div.PZPZlf[data-attrid=Low]"; //Low
        String query3 = "div.PZPZlf[data-attrid=High]";; //High
        for (int i = 0; i < stockURL.length; i++) {
            try{
                document = Jsoup.connect(stockURL[i]).get();
                String name = document.select(query).text();
                String priceTemp = document.select(query1).text();
                String tempLow = document.select(query2).text();
                String tempHigh = document.select(query3).text();
                insertData2(jdbc.connection, tickerSymbol[i], name);
                insertData(jdbc.connection,tickerSymbol[i], priceTemp, tempLow, tempHigh);


                fullName.add(name);
                price.add(priceTemp);
                lowPrice.add(tempLow);
                highPrice.add(tempHigh);

            }catch (Exception e){
                e.printStackTrace();
            }



    }
    finalReturn.add(fullName);
    finalReturn.add(price);
    finalReturn.add(lowPrice);
    finalReturn.add(highPrice);
    return finalReturn;
    }

    private void insertData(Connection connection,String tickerS, String price, String lowPrice, String highPrice) {
        try {
            String sql = "INSERT INTO stock (symbol, type, date, ticker, high, low, price) VALUES (?, ?, ?, ?, ?, ?, ?)";
            try (PreparedStatement preparedStatement = connection.prepareStatement(sql)) {
                preparedStatement.setString(1, tickerS);
                preparedStatement.setString(2, marketStatus());
                preparedStatement.setDate(3, new java.sql.Date(getDate().getTime()));
                preparedStatement.setString(4, "ticker_value");

                if (!highPrice.isEmpty() && highPrice.matches("[-+]?\\d*\\.?\\d+")) {
                    preparedStatement.setBigDecimal(5, new BigDecimal(highPrice));
                } else {
                    preparedStatement.setNull(5, java.sql.Types.DECIMAL);
                }

                if (!lowPrice.isEmpty() && lowPrice.matches("[-+]?\\d*\\.?\\d+")) {
                    preparedStatement.setBigDecimal(6, new BigDecimal(lowPrice));
                } else {
                    preparedStatement.setNull(6, java.sql.Types.DECIMAL);
                }

                if (!price.isEmpty() && price.matches("[-+]?\\d*\\.?\\d+")) {
                    preparedStatement.setBigDecimal(7, new BigDecimal(price));
                } else {
                    preparedStatement.setNull(7, java.sql.Types.DECIMAL);
                }

                preparedStatement.executeUpdate();
            }

        } catch (SQLException e) {
            System.out.println("Duplicate entries");
        }
    }
    private void insertData2(Connection connection,String tickerS, String fullName) {
        try {
            String sql = "INSERT INTO stock_name (symbol,full_name) VALUES (?,?)";
            try (PreparedStatement preparedStatement = connection.prepareStatement(sql)) {
                preparedStatement.setString(1, tickerS);
                preparedStatement.setString(2, fullName);
                preparedStatement.executeUpdate();
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }


    private Date getDate(){
        return new Date();

    }

    private static String marketStatus() {
        LocalTime currentTime = LocalTime.now();
        DayOfWeek currentDay = java.time.LocalDate.now().getDayOfWeek();

        if (currentDay != DayOfWeek.SATURDAY && currentDay != DayOfWeek.SUNDAY &&
                currentTime.isAfter(LocalTime.of(9, 30)) && currentTime.isBefore(LocalTime.of(16, 0))) {
            return "open";
        } else {
            return "closed";
        }
    }


    public void both(){
        String[] stockurl = generateURL(tickerSymbol);
        List<List<String>> temp =  stockInformation(stockurl);

        for(List<String> t: temp){
            System.out.println(t);
        }



    }




}
