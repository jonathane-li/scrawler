package com.mavin;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;

public class JDBC {
    String url, username, password;
    Connection connection;
    Statement statement;
    JDBC(String url, String username, String password) throws SQLException {
        this.url = url;
        this.username = username;
        this.password = password;
        connectJDBC();
    }
    public void createCustomTable(String[] columnNames, String[] columnTypes) {
        try {
            connectJDBC();
            String tableName = "stockTemp";
            StringBuilder sb = new StringBuilder("CREATE TABLE IF NOT EXISTS " + tableName + "( ");
            for (int i = 0; i < columnNames.length; i++) {
                sb.append(columnNames[i]).append(" ").append(columnTypes[i]);
                if (i < columnNames.length - 1) {
                    sb.append(", ");
                }
            }
            sb.append(", PRIMARY KEY (symbol))");

            executeUpdateQuery(sb.toString());
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            closeConnection();
        }
    }

    private void connectJDBC() throws SQLException {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            connection = DriverManager.getConnection(url, username, password);
            statement = connection.createStatement();
        } catch (ClassNotFoundException | SQLException e) {
            e.printStackTrace();
            throw new SQLException("Failed to connect to the database");
        }
    }

    private void closeConnection(){
        try{
            if(connection != null && !connection.isClosed()){
                connection.close();
            }
        }catch (Exception e){
            e.printStackTrace();
        }
    }
    private void executeUpdateQuery(String query) throws SQLException {
        if(connection == null){
            connectJDBC();
        }

        try{
            statement.executeUpdate(query);
            statement.close();
        }finally {
            if(statement != null){
                statement.close();
            }
            closeConnection();
        }

    }
}
